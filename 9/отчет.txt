Концепция:
Процессы А шифруют итеративно по 2 символа и отправляют их процессу В, который хранит результат шифрования.

Процесс B:
Формат запуска: ./b f1 где f1 - файл с входной строкой
Необходимо запустить его 1 раз раньше остальных процессов.

Структуры:
mytype (данные об обработанной части строки, которые процессы А отправляют процессу В):
  -pid (ИД процесса А, обработавшего два символа)
  -part (номер части строки)
  -c[2] (два зашифрованных символа)

Семафоры:
sem_send - мьютекс для отправки данных об обработанной части строки процессами А процессу В.
sem_part - семафор показывающий какую часть строки необходимо обрабатывать следующему процессу А.
sem_proc - семафор показывающий сколько процессов А живо.
sem_last_proc - семафор, значение которого равно PID последнего процесса А.
sem_b_pid - семафор, значение которого равно PID процесса B.

Каналы:
pipe.fifo - канал для передачи процессу В данных об обработанной процессом А части строки.

Важные переменные:
toExit - флаг о том, пора ли завершать работу (все процессы А умерли).

Порядок действий:
1. Создает семафоры и каналы;
2. Выделяет память под результирующую строку;
3. Циклично читает данные из канала pipe.fifo;
4. Прочтенные данные (зашифрованные символы) заносит в результирующую строку;
5. Если значение toExit вновь равно 1, а канал pipe.fifo пуст, то завершает работу.

При внештатном выходе (SIGINT) отправляет сигнал SIGINT последнему запущенному процессу A.

Процесс A:
Формат запуска: ./a f1 где f1 - файл с входной строкой (тот же файл, что и для В).
Запускается сколько угодно раз, если процесс В уже запущен.

Структуры: те же

Семафоры: те же
Каналы: те же

Важные переменные:
last_proc - PID процесса, которому нужно отправить SIGINT при внештатной ситуации (SIGINT).

Порядок действий:
1. Пытается открыть канал pipe.fifo, проверяет, что процесс В запущен;
2. Выделяет память под выходную строку, читает ее из файла;
3. Открывает семафоры и каналы;
4. Увеличивает sem_proc;
5. Читает из sem_last_proc значение в last_proc. Устанавливает туда свой PID.
------------
В ЦИКЛЕ:
6. Получает часть строки, которую нужно обработать, из sem_part. Если часть строки за пределами нее, то завершает работу.
7. Шифрует два символа, блокирует sem_send, отправляет их в структуре mytype процессу B через pipe.fifo, освобождает sem_send.
------------
8. При завершении работы (даже внештатном) уменьшает sem_proc;
9. При внештатном завершении отправляет SIGINT процессу с PID = last_proc. Тот процесс отправляет своему last_proc - и так по цепочке. Самый первый процесс А (с last_proc = -1) отправляет последнему процессу А. Последний А отправляет сигнал SIGUSR1, устанавливающий toExit в 1. Процесс В умирает.
